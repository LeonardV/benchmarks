% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GORICA-benchmarks_restriktor_asymp.R
\name{benchmarks}
\alias{benchmarks}
\title{Benchmarks for GORIC(A) weights}
\usage{
benchmarks(
  goric_obj,
  pop.est = NULL,
  other.N = NULL,
  CI.iter = 1000,
  seed.value = 123
)
}
\arguments{
\item{goric_obj}{An object from the goric function from the restriktor package. In this function, the GORIC or GORICA can be applied to every type of statistical model.}

\item{pop.est}{Optional. A nr.es-times-k matrix of population values for the k parameters of interest, leading to nr.es sets of population values. By default, pop.est = NULL; then, the estimates from the sample will be used. Benchmarks will be calculated for each of these value(s).}

\item{other.N}{Optional. A scalar to denote the (total) sample sizes, if you like to use another than used in the data. You could use this, for instance, to see to which values the GORIC(A) weights will converge (and thus to see the maximum value of the weights). By default, other.N = NULL. In that case, the sample size from the data will be used.}

\item{CI.iter}{Optional. A scalar denoting the number of iterations used to determine the benchmarks weights and their 95\\% confidence intervals (CIs). By default, CI.iter = 1000. Notable, the higher CI.iter, the longer the computation time.}

\item{seed.value.}{Optional. A scalar denoting the seed value. By default, seed.value = 123. By changing this value, you can inspect the sensitivity of the benchmarks -- which should not be present; if it is, you should increase CI.iter.}
}
\value{
The output comprises case-specific benchmarks for GORIC(A) weights (for each of the specified population estimates) and their 95\\% confidence intervals (CIs).
}
\description{
This function calculates case-specific benchmarks for GORIC(A) weights, together with their 95\\% confidence intervals (CIs).
}
\examples{

# library(benchmarks)

# Input 'data'
goric.obj <- My_goric_obj

# Input w.r.t. population values
pop.est <- My_pop_est

# Extra
iter <- 100

# Calculate case-specific benchmarks and their CIs
benchmarks_goric_asymp <- benchmarks(goric.obj, pop.est, CI.iter = iter)
benchmarks_goric_asymp$pop.estimates
benchmarks_goric_asymp$benchmarks
benchmarks_goric_asymp$CI.benchmarks

}
